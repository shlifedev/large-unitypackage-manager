name: Build and Release

on:
  workflow_dispatch:
    inputs:
      releaseName:
        description: 'Release Name'
        required: true

env:
   DOTNET_VERSION: '7.0.0'
   RELEASE_NAME: ${{ github.event.inputs.releaseName }}
   PROJECT_PATH: 'LargeFileManager.sln.sln' # Update this with the path to your solution file
jobs:
  build:
    name: Build
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest, ubuntu-latest, macos-latest]
    steps:
    - name: Setup .NET Core
    - uses: actions/checkout@v3
    - uses: actions/setup-dotnet@v3
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}
        
    - name: Check out code
      uses: actions/checkout@v2

    - name: Build Project
      run: dotnet publish ${{ env.PROJECT_PATH }} --configuration Release --self-contained true --runtime ${{
        matrix.os == 'windows-latest' && 'win-x64' ||
        matrix.os == 'ubuntu-latest' && 'linux-x64' ||
        matrix.os == 'macos-latest' && 'osx-x64'}} -p:PublishSingleFile=true -p:IncludeNativeLibrariesForSelfExtract=true -o ./publish
      
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ env.RELEASE_NAME }}
        release_name: ${{ env.RELEASE_NAME }}
        draft: false
        prerelease: false

    - name: Upload Release Asset
      id: upload_release_asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./publish/project
        asset_name: project-${{ matrix.os == 'windows-latest' && 'windows' || matrix.os == 'ubuntu-latest' && 'linux' || matrix.os == 'macos-latest' && 'macos' }}
        asset_content_type: application/octet-stream
