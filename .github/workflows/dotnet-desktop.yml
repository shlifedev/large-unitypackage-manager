name: Build and Release

on:
  workflow_dispatch:
    inputs:
      releaseName:
        description: 'Release Name'
        required: true
      tagName:
        description : 'Tag Name'
        required: true

env:
   TAG_NAME: ${{ github.event.inputs.tagName }}
   DOTNET_VERSION: '8.0.x'
   RELEASE_NAME: ${{ github.event.inputs.releaseName }}
   PROJECT_PATH: 'LargeFileManager.sln' # Update this with the path to your solution file
jobs:
  build:
    name: Build
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest, ubuntu-latest, macos-latest]
    steps:
    - name: Setup .NET Core 
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}
        
    - name: Check out code
      uses: actions/checkout@v3

    - name: Build Project
      run: dotnet publish ${{ env.PROJECT_PATH }} --configuration Release --self-contained true --runtime ${{
        matrix.os == 'windows-latest' && 'win-x64' ||
        matrix.os == 'ubuntu-latest' && 'linux-x64' ||
        matrix.os == 'macos-latest' && 'osx-x64'}} -p:PublishSingleFile=true -p:IncludeNativeLibrariesForSelfExtract=true -o ./publish
      
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.TOKEN }}
      with:
        tag_name: ${{ env.TAG_NAME }}
        release_name: ${{ env.RELEASE_NAME }}
        draft: false
        prerelease: false

    - name: Create Zip archive
      run: tar cvzf release.tar.gz ./publish/*

    - name: Upload files
      uses: actions/upload-release-asset@v1
      env:
       GITHUB_TOKEN: ${{ secrets.TOKEN }}
      with:
       upload_url: https://uploads.github.com/repos/shlifedev/large-unitypackage-manager/releases/137385646/assets{?name,label}
       asset_path: ./release.tar.gz
       asset_name: release.tar.gz
       asset_content_type: application/gzip
